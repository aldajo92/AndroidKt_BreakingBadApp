plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.projects.aldajo92.breakingbadapp"
        minSdk 23
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/*.kotlin_module'
        exclude 'META-INF/gradle/incremental.annotation.processors'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

ext {
    firebase_boom = '26.8.0'
    // Dependencies Version
    androidx_appcompat = '1.2.0'
    androidx_coreKtx = '1.3.2'
    androidx_constraintLayout = '2.0.4'
    androidx_lifecycleExtensions = '2.2.0'
    androidx_liveData = '2.3.1'
    androidx_fragmentktx = '1.3.2'
    androidx_preference = '1.1.1'
    android_navigation = '2.3.4'
    android_material = '1.2.1'
    recyclerView = '1.1.0'

    material = '1.3.0'
    timber = '4.7.1'

    moshi = '1.9.3'
    retrofit = '2.9.0'
    glide = '4.12.0'

    dagger_version = '2.32'
    room_version = '2.2.5'

    // Testing Dependencies Version
    mock_webserver = '4.6.0'
    robolectric = '4.4'
    androidx_core = '1.4.0'
    junit = '4.13.2'
    mockito_kotlin = '3.0.0'
    androidJunit = '1.1.2'
    expressonCore = '3.3.0'
    legacy_support_v4 = '1.0.0'
    coroutines_test = '1.4.3'
    core_testing = '2.1.0'
}

dependencies {
    implementation "androidx.lifecycle:lifecycle-extensions:$androidx_lifecycleExtensions"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_liveData"
    implementation "com.google.android.material:material:$material"
    implementation "androidx.fragment:fragment-ktx:$androidx_fragmentktx"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_v4"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide"

    // Moshi
    implementation "com.squareup.moshi:moshi:$moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"

    // Timber
    implementation "com.jakewharton.timber:timber:$timber"

    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt("androidx.room:room-compiler:$room_version") {
        exclude group: 'org.antlr', module: 'antlr4-runtime'
    }

    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    implementation "androidx.core:core-ktx:$androidx_coreKtx"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat"
    implementation "com.google.android.material:material:$android_material"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraintLayout"
    implementation "android.arch.navigation:navigation-fragment-ktx:$android_navigation"
    implementation "android.arch.navigation:navigation-ui-ktx:$android_navigation"

    //============================= Tests Section =============================//
    testImplementation "com.squareup.okhttp3:mockwebserver:$mock_webserver"
    testImplementation "org.robolectric:robolectric:$robolectric"
    testImplementation "junit:junit:$junit"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin"
    testImplementation "androidx.test:core:$androidx_core"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test"
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing"

    androidTestImplementation "androidx.test.ext:junit:$androidJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$expressonCore"
}